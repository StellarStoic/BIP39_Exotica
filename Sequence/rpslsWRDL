# Define the tuple with the words you want to write
words = ("rock", "paper", "scisors", "lizard", "spock",)

# Specify the total number of lines to be added to the wordlist
lines_n = 2048  # Total number of lines to write (you can change this to whatever number you want)

# Function to write words in a sequential pattern (1, 2, 3, ...)
def sequential_pattern(file, words, total_lines):
    count = 0
    while count < total_lines:
        for word in words:
            if count >= total_lines:
                break
            file.write(word + "\n")
            count += 1

# Function to write words in a repeating pattern (1, 1, 2, 2, 3, 3, ...)
def repeating_pattern(file, words, total_lines):
    lines_per_word = total_lines // len(words)
    remaining_lines = total_lines % len(words)
    
    for word in words:
        for _ in range(lines_per_word):
            file.write(word + "\n")
    
    # Distribute any remaining lines
    for i in range(remaining_lines):
        file.write(words[i] + "\n")

# Function to write words in a custom pattern (e.g., 1, 2, 3, 1, 2, 3, ...)
def custom_pattern(file, words, total_lines):
    pattern = [0, 1, 2, 0, 1, 2]  # Define your custom pattern using indices
    count = 0
    while count < total_lines:
        for index in pattern:
            if count >= total_lines:
                break
            if index < len(words):  # Ensure the pattern index is within the word list
                file.write(words[index] + "\n")
                count += 1

# Choose a pattern
print("Choose a pattern to write the words:")
print("1. Sequential Pattern (1, 2, 3, ...)")
print("2. Repeating Pattern (1, 1, 2, 2, 3, 3, ...)")
print("3. Custom Pattern (e.g., 1, 2, 3, 1, 2, 3, ...)")
pattern_choice = int(input("Enter the pattern number (1, 2, or 3): "))

# Open the file 'PadWRDL.txt' in write mode
with open("PadWRDL.txt", "w", encoding="utf-8") as file:
    if pattern_choice == 1:
        sequential_pattern(file, words, lines_n)
    elif pattern_choice == 2:
        repeating_pattern(file, words, lines_n)
    elif pattern_choice == 3:
        custom_pattern(file, words, lines_n)
    else:
        print("Invalid choice. Please run the script again and choose a valid pattern.")

print(f"{lines_n} lines have been written to 'PadWRDL.txt' using pattern {pattern_choice}.")